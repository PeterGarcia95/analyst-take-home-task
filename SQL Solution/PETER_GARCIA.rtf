{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 SELECT patients.id AS "PATIENT_ID",\
	encounters.id AS "ENCOUNTER_ID",\
	encounters.start AS "HOSPITAL_ENCOUNTER_DATE",\
	age(encounters.start, patients.birthdate) AS "AGE_AT_VISIT",\
--  the parameters below are a little more difficult so I will comment my logic\
	\
	CASE WHEN patients.deathdate BETWEEN encounters.start AND encounters.stop THEN '1'\
-- 	between is inclusive so if the death date occured within hospitalization encounter, then 1\
		WHEN patients.deathdate > encounters.stop THEN '0'\
--  patients can die after leaving the hospital so they will be marked as 0, null means alive\
		ELSE 'N/A'\
		END AS "DEATH_AT_VISIT_IND",\
		\
-- these two columns are more difficult because of the subqueries but but I labeled both tables e0 since \
-- they have the same filters applied. However, they are two distinct tables \
	(SELECT COUNT(*)\
	 FROM encounters AS e0\
	 	INNER JOIN patients ON patients.id = e0.patient\
	 	INNER JOIN medications ON medications.patient = patients.id\
-- 	 if medication stopped before hospitalization, automatically not active\
-- 	 null medication stop date means ongoing medication, need to check if medication prescribed before encounter start date\
-- 	 if medication stopped after hospitalization, need to check if medication prescribed before encounter start date\
	 WHERE((medications.stop - e0.start >= 0 OR medications.stop - e0.start is null ) AND ((medications.start - e0.start) < 0 ))\
		AND e0.id = encounters.id) AS "COUNT_CURRENT_MEDS",\
	\
	(SELECT CASE WHEN SUM(CASE WHEN medications.description ILIKE '%Hydromorphone 325%' THEN 1 \
				  WHEN medications.description ILIKE '%Fentanyl %' THEN 1\
				  WHEN medications.description ILIKE '%Oxycodone-acetaminophen%' THEN 1\
				  ELSE 0 END)  >= 1 THEN 1 \
				  ELSE 0 \
				  END AS "CURRENT_OPIOID_IND"\
-- 	 using same filters as before, instead of counting medications, check each med to see if opiod\
		FROM encounters AS e0\
	 	INNER JOIN patients ON patients.id = e0.patient\
	 	INNER JOIN medications ON medications.patient = patients.id\
	 WHERE((medications.stop - e0.start >= 0 OR medications.stop - e0.start is null ) AND ((medications.start - e0.start) < 0 ))\
		AND e0.id = encounters.id),\
		\
-- window function to look at encounters per patient in chronological order to determine if readmission true\
	CASE WHEN LEAD(encounters.start, 1) OVER (PARTITION BY encounters.patient ORDER BY encounters.start ) - encounters.stop <= 90 THEN 1 \
		ELSE 0 \
		END AS "READMISSION_90_DAY_IND",\
	CASE WHEN LEAD(encounters.start, 1) OVER (PARTITION BY encounters.patient ORDER BY encounters.start ) - encounters.stop <= 30 THEN 1 \
		ELSE 0 \
		END AS "READMISSION_30_DAY_IND",\
-- 	similar process but returning earliest date if readmission occured	\
	CASE WHEN LEAD(encounters.start, 1) OVER (PARTITION BY encounters.patient ORDER BY encounters.start ) - encounters.stop <= 30 THEN text(LEAD(encounters.start, 1) OVER (PARTITION BY encounters.patient ORDER BY encounters.start ))\
		WHEN LEAD(encounters.start, 1) OVER (PARTITION BY encounters.patient ORDER BY encounters.start ) - encounters.stop <= 90 THEN text(LEAD(encounters.start, 1) OVER (PARTITION BY encounters.patient ORDER BY encounters.start ))\
		ELSE 'N/A'\
		END AS "FIRST_READMISSION_DATE"\
\
		\
\
	\
FROM encounters \
	INNER JOIN patients ON patients.id = encounters.patient\
	INNER JOIN medications ON medications.patient = patients.id\
	\
 \
WHERE encounters.reasondescription = 'Drug overdose'  \
	AND encounters.start BETWEEN '1999-07-15' AND current_date \
	AND age(encounters.start, patients.birthdate) BETWEEN '18 years' AND '35 years 11 months 29 days'\
	\
GROUP BY patients.id, encounters.id\
ORDER BY encounters.id\
\
\
}